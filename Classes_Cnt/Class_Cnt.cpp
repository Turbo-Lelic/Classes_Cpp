// Beta 0.1 | #NoWorking  

#include <iostream>

using namespace std;

template <typename T>
class cnt {
private:
    T begin = 0, end = 0, res = 0; // начало диапозона | конец диапозона | значение по умолчанию
    char chr = ' ';
public:
    cnt(T begin, T end, T res) { // первый конструктор
        this->begin = begin, this->end = end;

        if (begin >= res && res <= end) { // если значение по умолчанию входит в диапозон n по m
            this->res = res;
        }
    }
    cnt(T begin, T end) { // второй конструктор
        this->begin = begin, this->end = end;
    }
    void enter(T res) { // метод ввода
        if (begin >= res && res <= end) {
            this->res = res;
        }
    }
    void conclusion() { // метод вывода
        cout << res;
    }
};

int main() {

    return 0;
}
// __________________1 Конструктор____________________________________________
//| cnt<int> n_1(1, 10, 2); -> создаем диапозон от begin до end и сохраняем 2                  
//| cnt<int> n_1(1, 10, 11); -> создаем диапозон от begin до end и сохраняем 0                                     
//|__________________2 Конструктор____________________________________________
//| cnt<int> n_2(1, 10); -> создаем диапозон от begin до end                          
//|__________________3 Конструктор____________________________________________
//| cnt<int> n_3(0, -); -> создаем диапозон с 0 до отрицательного числа 
//| сnt<int> n_3(0, +); -> создаем диапозон с 0 до положительного числа                                                                                                 
//|___________________________________________________________________________