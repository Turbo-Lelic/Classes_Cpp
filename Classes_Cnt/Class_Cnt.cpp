// Beta 0.2 | #NoWorking  

#include <iostream>

using namespace std;

template <typename T>
class cnt {
private:
    T begin = 0, end = 0, res = 0; // начало диапозона | конец диапозона | значение по умолчанию
    char chr = ' ';
public:
    cnt(T begin, T end, T res) { // первый конструктор
        this->begin = begin, this->end = end;

        if (this->begin >= res && res <= this->end) { // если значение по умолчанию входит в диапозон n по m
            this->res = res;
        }
    }
    cnt(T begin, T end) { // второй конструктор
        this->begin = begin, this->end = end;
    }
    cnt(T begin, char chr) { // третий конструктор
        this->begin = begin, this->chr = chr;
    }
    void enter(T res) { // метод ввода
        if (begin >= res && res <= end) {
            this->res = res;
        }
    }
    void conclusion() { // метод вывода
        cout << res;
    }
};

int main() {

    return 0;
}
//|__________________1  онструктор______________________________________________________________________
//| cnt<int> n(1, 10, 5); -> создаем диапозон от 1 до 10 включительно и сохран€ем 5                  
//| cnt<int> n(1, 10, 11); -> создаем диапозон от 1 до 10 включительно и не сохран€ем 11                                     
//|__________________2  онструктор______________________________________________________________________
//| cnt<int> n(1, 10); -> создаем диапозон от 1 до 10 включительно                          
//|__________________3  онструктор______________________________________________________________________
//| cnt<int> n(0, +); -> создаем диапозон от 0 до отрицательного числа включительно
//| сnt<int> n(0, -); -> создаем диапозон от 0 до положительного числа включительно               
//|__________________4  онструктор______________________________________________________________________
//| cnt<int> n(0, +, 5); -> создаем диапозон с 0 до отрицательного числа включительно и сохран€ем 5
//| cnt<int> n(0, -, 5); -> создаем диапозон с 0 до отрицательного числа включительно и не сохран€ем 5                                                                             
//|__________________ћетоды  ласса______________________________________________________________________
//| n.enter(5); -> сохран€ем 5 в n если диапозон это позвол€ет
//| n.conclusion(); -> выводим n
//|_____________________________________________________________________________________________________